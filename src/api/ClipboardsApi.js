/**
 * KnowYourPlace API
 * API do 'Aplikacja dla student√≥w zagranicznych'.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Clipboard from '../model/Clipboard';
import CreateClipboardDto from '../model/CreateClipboardDto';
import InlineResponse2001 from '../model/InlineResponse2001';
import InlineResponse201 from '../model/InlineResponse201';
import InlineResponse404 from '../model/InlineResponse404';
import InlineResponse4045 from '../model/InlineResponse4045';
import InlineResponse4046 from '../model/InlineResponse4046';
import UpdateClipboardDto from '../model/UpdateClipboardDto';

/**
* Clipboards service.
* @module api/ClipboardsApi
* @version 0.0.1
*/
export default class ClipboardsApi {

    /**
    * Constructs a new ClipboardsApi. 
    * @alias module:api/ClipboardsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the clipboardControllerAddArticleById operation.
     * @callback module:api/ClipboardsApi~clipboardControllerAddArticleByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Clipboard} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a article to the clipboard
     * @param {module:api/ClipboardsApi~clipboardControllerAddArticleByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Clipboard}
     */
    clipboardControllerAddArticleById(body, id, callback) {
      let postBody = body;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Clipboard;

      return this.apiClient.callApi(
        '/api/v1/clipboards/{id}/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the clipboardControllerCreate operation.
     * @callback module:api/ClipboardsApi~clipboardControllerCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse201} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new clipboard
     * @param {module:api/ClipboardsApi~clipboardControllerCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse201}
     */
    clipboardControllerCreate(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse201;

      return this.apiClient.callApi(
        '/api/v1/clipboards', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the clipboardControllerFindById operation.
     * @callback module:api/ClipboardsApi~clipboardControllerFindByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Clipboard} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a clipboard by id
     * @param {module:api/ClipboardsApi~clipboardControllerFindByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Clipboard}
     */
    clipboardControllerFindById(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Clipboard;

      return this.apiClient.callApi(
        '/api/v1/clipboards/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the clipboardControllerRemoveArticleById operation.
     * @callback module:api/ClipboardsApi~clipboardControllerRemoveArticleByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Clipboard} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes a article from the clipboard
     * @param {module:api/ClipboardsApi~clipboardControllerRemoveArticleByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Clipboard}
     */
    clipboardControllerRemoveArticleById(body, id, callback) {
      let postBody = body;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Clipboard;

      return this.apiClient.callApi(
        '/api/v1/clipboards/{id}/remove', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the clipboardControllerRemoveById operation.
     * @callback module:api/ClipboardsApi~clipboardControllerRemoveByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes a clipboard by id
     * @param {module:api/ClipboardsApi~clipboardControllerRemoveByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2001}
     */
    clipboardControllerRemoveById(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/api/v1/clipboards/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
