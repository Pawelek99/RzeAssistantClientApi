/**
 * KnowYourPlace API
 * API do 'Aplikacja dla student√≥w zagranicznych'.
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BannedUser from '../model/BannedUser';
import CreateBannedUserDto from '../model/CreateBannedUserDto';
import InlineResponse201 from '../model/InlineResponse201';
import InlineResponse404 from '../model/InlineResponse404';
import InlineResponse4042 from '../model/InlineResponse4042';

/**
 * BannedUser service.
 * @module api/BannedUserApi
 * @version 0.0.1
 */
export default class BannedUserApi {
	/**
	 * Constructs a new BannedUserApi.
	 * @alias module:api/BannedUserApi
	 * @class
	 * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
	 * default to {@link module:ApiClient#instance} if unspecified.
	 */
	constructor(apiClient) {
		this.apiClient = apiClient || ApiClient.instance;
	}

	/**
	 * Callback function to receive the result of the bannedUserControllerBanUser operation.
	 * @callback module:api/BannedUserApi~bannedUserControllerBanUserCallback
	 * @param {String} error Error message, if any.
	 * @param {module:model/InlineResponse201} data The data returned by the service call.
	 * @param {String} response The complete HTTP response.
	 */

	/**
	 * Creates a new banned user
	 * @param {module:api/BannedUserApi~bannedUserControllerBanUserCallback} callback The callback function, accepting three arguments: error, data, response
	 * data is of type: {@link module:model/InlineResponse201}
	 */
	bannedUserControllerBanUser(body, callback) {
		let postBody = body;

		let pathParams = {};
		let queryParams = {};
		let headerParams = {};
		let formParams = {};

		let authNames = ['bearer'];
		let contentTypes = ['application/json'];
		let accepts = ['application/json'];
		let returnType = InlineResponse201;

		return this.apiClient.callApi(
			'/api/v1/bannedUser',
			'POST',
			pathParams,
			queryParams,
			headerParams,
			formParams,
			postBody,
			authNames,
			contentTypes,
			accepts,
			returnType,
			callback
		);
	}
	/**
	 * Callback function to receive the result of the bannedUserControllerFindBannedUser operation.
	 * @callback module:api/BannedUserApi~bannedUserControllerFindBannedUserCallback
	 * @param {String} error Error message, if any.
	 * @param {module:model/BannedUser} data The data returned by the service call.
	 * @param {String} response The complete HTTP response.
	 */

	/**
	 * Returns banned user details
	 * @param {module:api/BannedUserApi~bannedUserControllerFindBannedUserCallback} callback The callback function, accepting three arguments: error, data, response
	 * data is of type: {@link module:model/BannedUser}
	 */
	bannedUserControllerFindBannedUser(id, callback) {
		let postBody = null;

		let pathParams = {
			id: id,
		};
		let queryParams = {};
		let headerParams = {};
		let formParams = {};

		let authNames = ['bearer'];
		let contentTypes = [];
		let accepts = ['application/json'];
		let returnType = BannedUser;

		return this.apiClient.callApi(
			'/api/v1/bannedUser/{id}',
			'GET',
			pathParams,
			queryParams,
			headerParams,
			formParams,
			postBody,
			authNames,
			contentTypes,
			accepts,
			returnType,
			callback
		);
	}
}
